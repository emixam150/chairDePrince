/*
** Header module
**/ exports.parse = function(req) {
       
        var headers = {};
   
        var temp = {
            accept:             req.headers['accept'],
            acceptCharset:      req.headers['accept-charset'],
            acceptEncoding:     req.headers['accept-encoding'],
            acceptLanguage:     req.headers['accept-language'],
            acceptDatetime:     req.headers['accept-datetime'],
            authorization:      req.headers['authorization'],
            cacheControl:       req.headers['cache-control'],
            connection:         req.headers['connection'],
            cookie:             req.headers['cookie'],
            contentLength:      req.headers['content-length'],
            contentMD5:         req.headers['content-md5'],
            contentType:        req.headers['content-type'],
            date:               req.headers['date'],
            expect:             req.headers['expect'],
            host:               req.headers['host'],
            ifMatch:            req.headers['if-match'],
            ifModifiedSince:    req.headers['if-modified-since'],
            ifNoneMatch:        req.headers['if-none-match'],
            ifRange:            req.headers['if-range'],
            ifUnmodifiedSince:  req.headers['if-unmodified-since'],
            maxForwards:        req.headers['max-forwards'],
            origin:             req.headers['origin'],
            pragma:             req.headers['pragma'],
            proxyAuthorization: req.headers['proxy-authorization'],
            range:              req.headers['range'],
            referer:            req.headers['referer'],
            TE:                 req.headers['te'],
            upgrade:            req.headers['upgrade'],
            userAgent:          req.headers['user-agent'],
            via:                req.headers['via'],
            warning:            req.headers['warning'],
            xRequestedWith:     req.headers['x-requested-with'],
            DNT:                req.headers['dnt'],
            xForwardedFor:      req.headers['x-forwarded-for'],
            xForwardedProto:    req.headers['x-forwarded-proto'],
            frontEndHttps:      req.headers['front-end-https'],
            xATTDeviceId:       req.headers['x-att-deviceid'],
            xWapProfile:        req.headers['x-wap-profile'],
            proxyConnection:    req.headers['proxy-connection']
        };
    console.log(tmp);
        for (header in temp) {
            if (typeof temp[header] !== 'undefined') {
                headers[header] = temp[header];
            }
        }

        if (typeof headers.accept !== 'undefined') {
            headers.accept = headers.accept.split(',');
        }
       
        if (typeof headers.acceptCharset !== 'undefined') {
            headers.acceptCharset = headers.acceptCharset.replace(/;q=[^,]+/gi, '').split(',');
        }
       
        if (typeof headers.acceptEncoding !== 'undefined') {
            headers.acceptEncoding = headers.acceptEncoding.split(',');
        }
       
        if (typeof headers.acceptLanguage !== 'undefined') {
            headers.acceptLanguage = headers.acceptLanguage.replace(/-/g, '_').replace(/;q=[^,]+/gi, '').split(',');
        }
       
        return headers;
    };
